// Wo Quarter‑Step Table (≈0.257 st) covering G1 (≈49 Hz) through E4 (≈330 Hz)
// 7‑bit, 128‑entry lookup for Codec2 absolute‑pitch modes.
// Generated 2025‑07‑19.
#include <math.h>
#define TWO_PI 6.283185307179586476925286766559f
#define FS      8000.0f

// ---------------------------------------------------------------------------
// Frequencies (Hz) – handy for logging
/* 128‑entry periodic scale: 55 Hz → 350 Hz */
static const float F_PERIODIC_55_350[128] = {
     55.000000,  55.018290,  55.073160,  55.164610,  55.292641,  55.457251,  55.658441,  55.896212,
     56.170562,  56.481493,  56.829004,  57.213094,  57.633765,  58.091016,  58.584847,  59.115258,
     59.682249,  60.285821,  60.925972,  61.602703,  62.316015,  63.065906,  63.852378,  64.675429,
     65.535061,  66.431273,  67.364065,  68.333437,  69.339389,  70.381921,  71.461033,  72.576725,
     73.728997,  74.917850,  76.143282,  77.405295,  78.703887,  80.039060,  81.410813,  82.819146,
     84.264059,  85.745553,  87.263626,  88.818279,  90.409512,  92.037326,  93.701719,  95.402692,
     97.140245,  98.914378, 100.725092, 102.572386, 104.456259, 106.376713, 108.333747, 110.327361,
    112.357555, 114.424329, 116.527683, 118.667618, 120.844132, 123.057226, 125.306901, 127.593155,
    129.915990, 132.275404, 134.671399, 137.103973, 139.573128, 142.078862, 144.621177, 147.200072,
    149.815547, 152.467602, 155.156237, 157.881452, 160.643247, 163.441623, 166.276578, 169.148113,
    172.056229, 174.000000, 177.007126, 180.050897, 183.131315, 186.248378, 189.402087, 192.592441,
    195.819441, 199.083086, 202.383377, 205.720313, 209.093895, 212.504122, 215.951005, 219.434533,
    222.954707, 226.511527, 230.104992, 233.735103, 237.401860, 241.105262, 244.845310, 248.622004,
    252.435343, 256.285329, 260.171960, 264.095237, 268.055160, 272.051728, 276.084942, 280.154802,
    284.261308, 288.404459, 292.584257, 296.800700, 301.053789, 305.343523, 309.669904, 314.032930,
    318.432602, 322.868920, 327.341883, 331.851493, 336.397749, 340.980650, 345.600198, 350.000000
};
/* ---------------------------------------------------------------------------
 * Equal‑period fundamental scale Wo = 2 π f / Fs   (Fs = 8000 Hz)
 * Periods are linearly spaced from 1/55 s to 1/350 s (128 entries)
 * Frequencies therefore run 55 Hz → 350 Hz (ascending)
 * ------------------------------------------------------------------------- */
static const float WO_LUT[128] = {
    0.043196899f, 0.043485498f, 0.043777979f, 0.044074421f, 0.044374905f, 0.044679515f, 0.044988336f, 0.045301455f,
    0.045618963f, 0.045940954f, 0.046267522f, 0.046598766f, 0.046934788f, 0.047275690f, 0.047621581f, 0.047972571f,
    0.048328773f, 0.048690305f, 0.049057286f, 0.049429841f, 0.049808098f, 0.050192188f, 0.050582249f, 0.050978419f,
    0.051380845f, 0.051789674f, 0.052205061f, 0.052627166f, 0.053056153f, 0.053492190f, 0.053935454f, 0.054386125f,
    0.054844392f, 0.055310447f, 0.055784490f, 0.056266730f, 0.056757380f, 0.057256662f, 0.057764806f, 0.058282051f,
    0.058808642f, 0.059344836f, 0.059890897f, 0.060447101f, 0.061013732f, 0.061591088f, 0.062179474f, 0.062779211f,
    0.063390629f, 0.064014074f, 0.064649904f, 0.065298492f, 0.065960225f, 0.066635508f, 0.067324760f, 0.068028420f,
    0.068746945f, 0.069480809f, 0.070230511f, 0.070996567f, 0.071779520f, 0.072579934f, 0.073398401f, 0.074235537f,
    0.075091989f, 0.075968434f, 0.076865579f, 0.077784167f, 0.078724976f, 0.079688822f, 0.080676561f, 0.081689094f,
    0.082727366f, 0.083792370f, 0.084885153f, 0.086006816f, 0.087158518f, 0.088341484f, 0.089557004f, 0.090806439f,
    0.092091231f, 0.093412900f, 0.094773058f, 0.096173411f, 0.097615768f, 0.099102047f, 0.100634285f, 0.102214648f,
    0.103845439f, 0.105529110f, 0.107268277f, 0.109065729f, 0.110924446f, 0.112847614f, 0.114838646f, 0.116901197f,
    0.119039192f, 0.121256846f, 0.123558698f, 0.125949633f, 0.128434927f, 0.131020277f, 0.133711850f, 0.136516328f,
    0.139440970f, 0.142493667f, 0.145683017f, 0.149018406f, 0.152510100f, 0.156169350f, 0.160008513f, 0.164041193f,
    0.168282398f, 0.172748732f, 0.177458610f, 0.182432509f, 0.187693271f, 0.193266448f, 0.199180722f, 0.205468396f,
    0.212165985f, 0.219314924f, 0.226962430f, 0.235162543f, 0.243977403f, 0.253478833f, 0.263750297f, 0.274889357f
};

/* --------------------------------------------------------------------
 * Inline helpers so encode_Wo()/decode_Wo() can find the table.
 * Safe because only quantise.c includes this header.
 * ------------------------------------------------------------------*/
#include <math.h>

static inline int wo_parabolic_encode(float Wo)
{
    int lo = 0, hi = 127, mid;
    while (lo <= hi) {
        mid = (lo + hi) >> 1;
        if (WO_LUT[mid] < Wo)
            lo = mid + 1;
        else
            hi = mid - 1;
    }
    if (lo > 127) return 127;
    if (lo == 0)  return 0;
    return (fabsf(WO_LUT[lo] - Wo) < fabsf(WO_LUT[lo-1] - Wo)) ? lo : lo-1;
}

static inline float wo_parabolic_decode(int index)
{
    if ((unsigned)index > 127u) index = (index < 0) ? 0 : 127;
    return WO_LUT[index];
}

